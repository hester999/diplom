version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: vulnerable_db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: vulnerable_db
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - backend

  sql-injection:
    build:
      context: ./app/SQL
      dockerfile: Dockerfile
    container_name: sql_injection_service
    restart: always
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql://admin:123@db:5432/vulnerable_db
    networks:
      - backend


  attacker:
    build:
      context: ./app/attacker
      dockerfile: Dockerfile
    container_name: attacker_service
    restart: always
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql://admin:123@db:5432/vulnerable_db
    networks:
      - backend




  xss:
    build:
      context: ./app/xss
      dockerfile: Dockerfile
    container_name: xss_service
    restart: always
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql://admin:123@db:5432/vulnerable_db
    networks:
      - backend

  csrf:
    build:
      context: ./app/csrf
      dockerfile: Dockerfile
    container_name: csrf_service
    restart: always
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql://admin:123@db:5432/vulnerable_db
    networks:
      - backend

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./app/SQL/static:/app/templates/SQL  # Статика для SQL-инъекций
      - ./templates:/app/templates    # Главная страница
      - ./app/xss/static:/app/templates/xss  # Статика для XSS
      - ./app/attacker/static:/app/templates/attacker  # Статика для attacker
      - ./app/csrf/static:/app/templates/csrf  # Статика для CSRF
      - ./app/file-upload/static:/app/file-upload/static  # Статика для File Upload
    ports:
#      - "80:80"
      - "8080:80"
    depends_on:
      - sql-injection
    networks:
      - backend

networks:
  backend:
    driver: bridge